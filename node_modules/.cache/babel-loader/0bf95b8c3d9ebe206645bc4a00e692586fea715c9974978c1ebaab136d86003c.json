{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = process.env.REACT_APP_API_BASE_URL || \"\";\nconst apiClient = axios.create({\n  baseURL\n});\napiClient.interceptors.request.use(config => {\n  const updatedConfig = {\n    ...config\n  };\n  updatedConfig.headers = updatedConfig.headers || {};\n  // Demo token; in production, replace with real auth flow\n  updatedConfig.headers.Authorization = updatedConfig.headers.Authorization || \"Bearer demo\";\n  return updatedConfig;\n});\nexport default apiClient;","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_BASE_URL","apiClient","create","interceptors","request","use","config","updatedConfig","headers","Authorization"],"sources":["C:/Users/birth/polok-portia/AI-Workbench-for-Transparent-Task-Automation/src/api/client.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = process.env.REACT_APP_API_BASE_URL || \"\";\r\n\r\nconst apiClient = axios.create({\r\n  baseURL,\r\n});\r\n\r\napiClient.interceptors.request.use((config) => {\r\n  const updatedConfig = { ...config };\r\n  updatedConfig.headers = updatedConfig.headers || {};\r\n  // Demo token; in production, replace with real auth flow\r\n  updatedConfig.headers.Authorization = updatedConfig.headers.Authorization || \"Bearer demo\";\r\n  return updatedConfig;\r\n});\r\n\r\nexport default apiClient;\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,EAAE;AAExD,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BL;AACF,CAAC,CAAC;AAEFI,SAAS,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC7C,MAAMC,aAAa,GAAG;IAAE,GAAGD;EAAO,CAAC;EACnCC,aAAa,CAACC,OAAO,GAAGD,aAAa,CAACC,OAAO,IAAI,CAAC,CAAC;EACnD;EACAD,aAAa,CAACC,OAAO,CAACC,aAAa,GAAGF,aAAa,CAACC,OAAO,CAACC,aAAa,IAAI,aAAa;EAC1F,OAAOF,aAAa;AACtB,CAAC,CAAC;AAEF,eAAeN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}